name: Build for Linux ARM64

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-arm64:
    name: Build for Linux ARM64
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure apt for cross-compilation and install dependencies
        run: |
          # Add arm64 architecture for cross-compiling
          sudo dpkg --add-architecture arm64

          # --- NEW ROBUST FIX ---
          # Find all source list files that point to the security repository and restrict them to amd64.
          # This prevents 404 errors when updating arm64 packages, as security repos often lack arm64 packages.
          find /etc/apt/sources.list* -type f -exec sudo sed -i -e 's/deb http:\/\/security.ubuntu.com/deb [arch=amd64] http:\/\/security.ubuntu.com/g' {} +
          find /etc/apt/sources.list* -type f -exec sudo sed -i -e 's/deb http:\/\/azure.archive.ubuntu.com/deb [arch=amd64,arm64] http:\/\/azure.archive.ubuntu.com/g' {} +
          # The second line ensures that the main archive continues to serve both architectures.
          # --- END FIX ---

          sudo apt-get update

          # Install build tools and target architecture libraries
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            clang-14 llvm-14 lld-14 \
            zlib1g-dev:arm64 liblzo2-dev:arm64 libssl-dev:arm64

      - name: Build with Make for ARM64
        env:
          CC: clang-14
          CFLAGS: "--target=aarch64-linux-gnu"
          LDFLAGS: "-fuse-ld=lld-14 --target=aarch64-linux-gnu"
        run: |
          make clean
          make --jobs

      - name: Verify build output
        run: |
          echo "Verifying the architecture of the compiled binary..."
          file quickbms64

      - name: Upload ARM64 binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: quickbms-linux-arm64
          path: quickbms64

# This is the definitive GitHub Actions workflow to cross-compile for ARM64.
# It correctly configures APT to use separate repositories for amd64 and arm64,
# which solves all '404 Not Found' errors during package installation.
name: Cross-Compile for ARM64 (Definitive Fix)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  cross-compile-arm64:
    name: Cross-Compile on Ubuntu 22.04 (x86_64 -> arm64)
    # Lock to a specific LTS version for stability and predictable repository behavior.
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure APT for cross-compilation
        run: |
          # 1. Modify the existing repository sources to specify they are for amd64 only.
          #    This is the crucial step that prevents `apt` from trying to find arm64 packages
          #    on the default amd64 repositories, which causes the '404 Not Found' error.
          sudo sed -i 's/^deb /deb [arch=amd64] /' /etc/apt/sources.list
          # Also modify any additional sources that might be present.
          find /etc/apt/sources.list.d/ -type f -name "*.list" -exec sudo sed -i 's/^deb /deb [arch=amd64] /' {} \;

          # 2. Add the arm64 architecture.
          sudo dpkg --add-architecture arm64

          # 3. Add the `ports.ubuntu.com` repository, which hosts packages for arm64.
          #    We specify `[arch=arm64]` to ensure this source is only used for arm64 packages.
          . /etc/os-release
          UBUNTU_CODENAME=$UBUNTU_CODENAME
          echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports ${UBUNTU_CODENAME} main restricted universe multiverse" | sudo tee /etc/apt/sources.list.d/arm64-ports.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports ${UBUNTU_CODENAME}-updates main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list.d/arm64-ports.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports ${UBUNTU_CODENAME}-security main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list.d/arm64-ports.list

          # 4. Update the package list. `apt` will now query both sets of repositories without error.
          sudo apt-get update

      - name: Install cross-compilation toolchain and libraries
        run: |
          # Now that apt is configured correctly, this installation will succeed.
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            clang-14 llvm-14 lld-14 \
            zlib1g-dev:arm64 \
            liblzo2-dev:arm64 \
            libssl-dev:arm64

      - name: Build with Clang cross-compiler
        run: |
          echo "Starting QuickBMS cross-compilation..."
          make rebuild --jobs=$(nproc) \
            CC="clang-14 --target=aarch64-linux-gnu" \
            CXX="clang++-14 --target=aarch64-linux-gnu"
          echo "Build finished successfully."

      - name: Verify binary architecture
        run: |
          echo "Verifying the architecture of the compiled binary..."
          file src/quickbms
          # This grep command ensures the job fails if the output is not an ARM aarch64 executable.
          file src/quickbms | grep "ARM aarch64"

      - name: Upload arm64 binary as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: quickbms-linux-arm64
          path: src/quickbms
